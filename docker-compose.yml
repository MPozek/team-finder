version: '3.6'

#volumes:
#  mongodata:

services:
  api:
    container_name: team-finder-api
    build: ./api
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    expose:
      - "8080"

#  api:
#    container_name: team-finder-debug-api
#    build: ./debug_api
#    restart: on-failure
#    ports:
#      - "8080:8080"
#    expose:
#      - "8080"
#    command: python ./server.py 8080

  ui:
    container_name: team-finder-ui
    build:
      context: ./ui
#      dockerfile: Dockerfile.dev
    user: 0:0
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - ./.env
    volumes:
      - ./ui:/app
    expose:
      - "3000"

  nginx:
    image: nginx:1.23.1-alpine
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/err.log:/logs/err.log
      - ./logs/access.log:/logs/access.log
    ports:
      - "80:80"
    depends_on:
      - "ui"
      - "api"

  db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - ./mongo/data:/data/db

  db-seed:
    build: ./db/seed
    environment:
      MONGO_USERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      MONGO_PASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
    links:
      - db

  db-viewer:
    image: mongo-express
    restart: on-failure
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_MONGODB_URL: ${ME_CONFIG_MONGODB_URL}
